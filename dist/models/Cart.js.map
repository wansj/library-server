{"version":3,"sources":["../../models/Cart.js"],"names":["CartSchema","Schema","userId","type","String","required","unique","bookIds","Types","ObjectId","subscriptions","default","Cart","model","e","name"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,aAAa,mBAASC,MAAT,CAAgB;AACjCC,UAAQ,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAAgCC,QAAQ,IAAxC,EADyB;AAEjCC,WAAS,EAAEJ,MAAM,CAAC,mBAASF,MAAT,CAAgBO,KAAhB,CAAsBC,QAAvB,CAAR,EAA0CJ,UAAU,IAApD,EAFwB;AAGjCK,iBAAe,EAAEP,MAAM,CAACC,MAAD,CAAR,EAAkBO,SAAS,EAA3B;AAHkB,CAAhB,CAAnB;AAKA,IAAIC,OAAO,IAAX;AACA,IAAI;AACFA,SAAO,mBAASC,KAAT,CAAe,MAAf,EAAuBb,UAAvB,CAAP;AACD,CAFD,CAEE,OAAOc,CAAP,EAAU;AACV,MAAIA,EAAEC,IAAF,KAAW,qBAAf,EAAsC;AACpCH,WAAO,mBAASC,KAAT,CAAe,MAAf,CAAP;AACD;AACF;kBACcD,I","file":"Cart.js","sourcesContent":["import mongoose from 'mongoose'\n\nconst CartSchema = mongoose.Schema({\n  userId: { type: String, required: true, unique: true },\n  bookIds: { type: [mongoose.Schema.Types.ObjectId], required: true },\n  subscriptions: { type: [String], default: [] }\n})\nlet Cart = null\ntry {\n  Cart = mongoose.model('Cart', CartSchema)\n} catch (e) {\n  if (e.name === 'OverwriteModelError') {\n    Cart = mongoose.model('Cart')\n  }\n}\nexport default Cart"]}