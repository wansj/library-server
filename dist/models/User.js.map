{"version":3,"sources":["../../models/User.js"],"names":["mongoose","require","UserSchema","Schema","username","type","String","unique","required","password","department","role","User","model","e","name","module","exports"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,aAAaF,SAASG,MAAT,CAAgB;AACjCC,YAAU,EAACC,MAAMC,MAAP,EAAeC,QAAQ,IAAvB,EAA6BC,UAAU,IAAvC,EADuB;AAEjCC,YAAU,EAACJ,MAAMC,MAAP,EAAeE,UAAU,IAAzB,EAFuB;AAGjCE,cAAY,EAACL,MAAMC,MAAP,EAAeE,UAAU,IAAzB,EAHqB;AAIjCG,QAAM,EAACN,MAAMC,MAAP,EAAeE,UAAU,IAAzB;AAJ2B,CAAhB,CAAnB;AAMA,IAAII,OAAO,IAAX;AACA,IAAI;AACFA,SAAOZ,SAASa,KAAT,CAAe,MAAf,EAAuBX,UAAvB,CAAP;AACD,CAFD,CAEE,OAAOY,CAAP,EAAU;AACV,MAAIA,EAAEC,IAAF,KAAW,qBAAf,EAAsC;AACpCH,WAAOZ,SAASa,KAAT,CAAe,MAAf,CAAP;AACD;AACF;AACDG,OAAOC,OAAP,GAAiBL,IAAjB","file":"User.js","sourcesContent":["const mongoose = require('mongoose')\nconst UserSchema = mongoose.Schema({\n  username: {type: String, unique: true, required: true},\n  password: {type: String, required: true},\n  department: {type: String, required: true},\n  role: {type: String, required: true}\n})\nlet User = null\ntry {\n  User = mongoose.model('User', UserSchema)\n} catch (e) {\n  if (e.name === 'OverwriteModelError') {\n    User = mongoose.model('User')\n  }\n}\nmodule.exports = User"]}