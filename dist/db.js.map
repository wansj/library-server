{"version":3,"sources":["../db.js"],"names":["mongoose","require","host","port","database","connect","useMongoClient","Promise","global","db","connection","transactionChecker","setInterval","context","Books","recoverFromPending","console","log","timer","on","error","clearInterval","once","module","exports"],"mappings":";;AAAA;;;;;;;;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;eAC+BA,QAAQ,YAAR,C;IAAxBC,I,YAAAA,I;IAAMC,I,YAAAA,I;IAAMC,Q,YAAAA,Q;;AACnBJ,SAASK,OAAT,gBAA8BH,IAA9B,SAAsCC,IAAtC,SAA8CC,QAA9C,EAA0D,EAAEE,gBAAe,IAAjB,EAA1D;AACAN,SAASO,OAAT,GAAmBC,OAAOD,OAA1B;AACA,IAAME,KAAKT,SAASU,UAApB;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB,GAAY;AAAA;;AACrC,SAAOC,oEAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,mBADW,GACD,EAAEJ,MAAF,EADC;AAAA;AAAA;AAAA,mBAGT,uBAAYK,KAAZ,CAAkBC,kBAAlB,CAAqCF,OAArC,CAHS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAKfG,oBAAQC,GAAR;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,IAOJ,KAAG,EAAH,GAAM,IAPF,CAAP;AAQD,CATD;AAUA,IAAIC,QAAQ,IAAZ;AACAT,GAAGU,EAAH,CAAM,OAAN,EAAe,YAAY;AACzBH,UAAQI,KAAR,CAAc,kBAAd;AACAC,gBAAcH,KAAd;AACD,CAHD;AAIAT,GAAGa,IAAH,CAAQ,MAAR,EAAgB,YAAY;AAC1BN,UAAQC,GAAR,6BAAsCd,IAAtC;AACAe,UAAQP,oBAAR;AACD,CAHD;AAIAY,OAAOC,OAAP,GAAiBf,EAAjB","file":"db.js","sourcesContent":["import Transaction from './graphql/transactions'\n\nconst mongoose = require('mongoose')\nconst {host, port, database} = require('./settings')\nmongoose.connect(`mongodb://${host}:${port}/${database}`, { useMongoClient:true })\nmongoose.Promise = global.Promise\nconst db = mongoose.connection\n\nconst transactionChecker = function () {\n  return setInterval(async () => {\n    const context = { db }\n    try {\n      await Transaction.Books.recoverFromPending(context)\n    } catch (e) {\n      console.log(e)\n    }\n  }, 30*60*1000)\n}\nlet timer = null\ndb.on('error', function () {\n  console.error('connection error')\n  clearInterval(timer)\n})\ndb.once('open', function () {\n  console.log(`db is running on port: ${port}`)\n  timer = transactionChecker()\n})\nmodule.exports = db\n"]}