"use strict";

var Book = "\n  scalar Date\n  type SelectOptions {\n    authors: [String!]\n    translators: [String!]\n    publishers: [String!]\n  }\n  type Book {\n    id: ID! @unique\n    isbn: String! @unique\n    title: String!\n    summary: String\n    cover: String\n    authors: [String!]!\n    translators: [String!]\n    publisher: String!\n    version: Int\n    pubDate: Date\n    price: Float\n    location: String\n    volume: Int\n    count: Int\n    category: String\n    scheduledCount: Int\n  }\n  input BookInput {\n    isbn: String\n    title: String\n    summary: String\n    cover: String\n    authors: [String]\n    translators: [String]\n    publisher: String\n    version: Int\n    pubDate: Date\n    price: Float\n    location: String\n    volume: Int\n    count: Int\n    category: String\n  }\n  type Category {\n    id: ID @unique\n    label: String!\n    parent: Category\n  }\n  enum BugKeyword {\n    COVER\n    BOOK\n    CUSTOM\n  }\n  enum BugStatus {\n    NEW\n    READ\n    CONFIRMED\n    RESOLVED\n    REJECTED\n  }\n  enum BookState {\n    BORROWED\n    RETURNED\n  }\n  type BugReport {\n    id: ID\n    keyword: BugKeyword\n    status: BugStatus\n    createAt: Date\n    description: String\n    coverId: ID\n    bookId: ID\n    reporter: ID\n  }\n  input BugReportInput {\n    keyword: BugKeyword!\n    status: BugStatus!\n    createAt: Date!\n    description: String\n    coverId: ID\n    bookId: ID!\n    reporter: ID\n  }\n  input BatchMappingInput {\n    bookId: ID!\n    coverId: ID!\n  }\n  type Record {\n    id: ID!\n    userId: ID!\n    book: Book!\n    state: String!\n    date: Date!\n    deadline: Date!\n    returnDate: Date\n    timeout: Boolean!\n    canDelay: Boolean!\n  }\n  type Statistics {\n    maxHoldCount: Int!\n    readCount: Int!\n    interests: [String!]\n    recentRead: [Record!]\n    credit: Float\n  }\n  input RecordsFilter {\n    from: Date\n    to: Date\n    deadline: Int\n    state: BookState\n    userId: ID\n    username: String\n  }\n  input BooksFilter {\n    sortBy: String\n    category: String\n    authors: [String!]\n    publisher: String\n    count: Int,\n    keyword: String\n  }\n enum CoversFilter{\n    SHOW_ALL\n    SHOW_UNRELATED\n    SHOW_BUGS\n  }\n  scalar Upload\n  type File {\n    id: ID!\n    file: Upload\n  }\n  type CoverCount {\n    total: Int!\n    bugsCount: Int!\n    unrelatedCount: Int!\n  }\n  type CoversPage {\n    covers: [File]\n    hasMore: Boolean\n  }\n  type Collection {\n    id: ID!\n    userId: ID!\n    books: [Book!]\n  }\n  type BookComment {\n    id: ID\n    bookId: String\n    userId: String\n    title: String\n    details: String\n    score: Int\n    postDate: Date\n    thumbs: Int\n  }\n  type BookCommentProfile{\n    count: Int\n    average: Float\n    max: Int\n    group: [Star]\n  }\n  type Star{\n    level: Int\n    percent: Float\n  }\n  input BookCommentInput {\n    bookId: String!\n    userId: String!\n    title: String!\n    details: String!\n    score: Int!\n    postDate: Date\n  }\n  type BorrowPlan{\n    expireAt: Date!\n    books: [Book!]!\n  }\n  type MessageStatus{\n    receiver: ID\n    unread: Boolean\n  }\n  type Post{\n    id: ID!\n    postBy: ID\n    message: String\n    iat: Date\n    sessionId: String\n    status: [MessageStatus]\n    messageType: String\n    book: Book\n  }\n  type GroupedPost{\n    iat: String\n    posts: [Post]\n  }\n  type Feedback{\n    id: ID\n    category: String\n    description: String\n    postBy: String\n    iat: Date\n    status: String\n  }\n  enum FeedbackHandleStatus{\n    ADOPTED\n    REJECTED\n    RESOLVED\n  }\n  enum FeedbackCategories{\n    BUG\n    ADVICE\n  }\n  enum ReserveKind{\n    BORROW\n    RETURN\n  }\n  type Plan{\n    book: Book!\n    timespan: [Date!]!\n    process: Int!\n  }\n  input PlanInput{\n    bookId: String!\n    timespan: [Date!]!\n  }\n  type ReadPlan{\n    id: ID!\n    title: String!\n    userId: String!\n    plans: [Plan!]!\n  }\n  type Interest{\n    category: String!\n    percent: Float!\n    count: Int!\n  }\n  type BookStatistics{\n    book: Book!\n    count: Int!\n  }\n";
module.exports = Book;
//# sourceMappingURL=Types.js.map